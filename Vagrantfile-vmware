# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  
  Vagrant.require_version ">= 1.4.3"



  config.vm.define :vflowbox do | vflowbox |    
    
    vflowbox.vm.box = "box-cutter/ubuntu1404"
  	vflowbox.vm.hostname = "vflowbox"

    # Create host-only adapter
    #vflowbox.vm.network "private_network", type: :dhcp

    # Create a private network
    vflowbox.vm.network :private_network
    #, ip: "192.168.1.144"

    vflowbox.vm.synced_folder "./srv/", "/srv/", type: "nfs", nfs_export: false
   
    vflowbox.vm.network "public_network", bridge: 'en1: Wi-Fi (AirPort)'
    vflowbox.ssh.forward_agent = true
    #config.ssh.username = "tripl3inf"
	  #config.ssh.private_key_path = "/Users/tripl3inf/.ssh/t3i_deploy"


    ##################
    # Vagrant Cache (package)
    ##################
    if Vagrant.has_plugin?("vagrant-cachier")
       config.cache.scope       = :machine # or :box
       config.cache.auto_detect = false
    end


 
    #digitalOcean provider
#    vflowbox.vm.provider :digital_ocean do |provider, override|
#      override.ssh.private_key_path = '~/.ssh/id_rsa'
#      provider.token  = 'f47d870864d590b8bf7263a049375caac2aa47487b07085b34738686e3cf24f4'
#      provider.region = 'nyc2'
#      provider.image  = 'Ubuntu 14.04 x64'
#      provider.size   = '512MB'
#    end
    



  config.vm.provider "vmware_fusion" do |v|
    #v.gui = true
    v.vmx["memsize"] = "512"
    v.vmx["numvcpus"] = "1"
    v.vmx["ethernet1.generatedAddress"] = nil #If the vmx file contains an auto-generated MAC address, remove it
    v.vmx["ethernet1.addressType"] = "static" #specify the MAC is static
    v.vmx["ethernet1.connectionType"] = "nat" #specify the NAT network
    v.vmx["ethernet1.present"] = "TRUE" #enable the NIC for the OS
    v.vmx["ethernet1.address"] = "5c:a1:ab:1e:00:02" #the MAC address
  end


  
  
  end
end

