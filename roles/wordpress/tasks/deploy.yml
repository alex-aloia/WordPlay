---
- name: Create release timestamp
  command: date +%Y%m%d%H%M%S
  register: timestamp

- name: Set release directory
  set_fact: path="/srv/{{project.env}}/{{project.name}}/repo/{{ timestamp.stdout }}"
  register: release
  #sudo: true

- name: Checkout theme base from repo
  git: repo={{ project.theme.url }} dest="{{release.ansible_facts.path}}/" version={{project.theme.branch | default(HEAD)}} accept_hostkey=yes
  sudo: false

- debug: var=release.ansible_facts.path

#- name: Register theme(s) #TODO: add support for multiple themes
#  command: "echo {{release_path.stdout}}/themes/{{theme.name}}"
#  register: theme_path


- name: Check if Node version config file is present
  command: 'cat {{release.ansible_facts.path}}/.nvmrc'
  register: nvmrc_result
  failed_when: "'no such file' in nvmrc_result.stderr"

- name: Set default Node version
  lineinfile: dest='{{release.ansible_facts.path}}/.nvmrc' line='{{project.node_vs}}' create=yes state=present backup=no
  when: nvmrc_result | failed

- debug: var=nvmrc_result.stderr



- name: Composer install
  shell: cd {{release.ansible_facts.path}}; composer install

- name: NPM Install
  npm: path={{release.ansible_facts.path}}/themes/{{project.theme.name}}


- name: Update Bower, run Gulp
  shell: cd {{release.ansible_facts.path}}/themes/{{project.theme.name}}; {{ item }}
  ignore_errors: true
  with_items:
    - bower update --silent
    - gulp less
    - npm install
#  sudo: false

- name: Update to current
  file: >
    state=link
    path=/srv/{{project.env}}/{{ project.name }}/content
    src={{release.ansible_facts.path}}
  notify: restart nginx
#  sudo: true
##  sudo_user: '{{deploy_user}}'
#
#
#
#
#
##
#- name: Wait to restart nginx
#  pause: seconds=10
#  notify: restart nginx

#- name: php-fpm restart
#  shell: service php5-fpm restart
#  sudo: true
