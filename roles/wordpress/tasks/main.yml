# Check if Wordpress is installed
---
# Register project path
- name: Register project path
  shell: "echo /srv/{{project.env}}/{{project.name}}"
  register: project_path
  ignore_errors: true
  changed_when: project_path.rc == 'null'

# Check if registered 'project_root_path' is present
- name: Verify presence of project project
  stat: path={{project_path.stdout}}
  register: project_exist

- include: structure.yml
  when: project_exist.stat.exists == false
  sudo: true

# check for wp-config file
- name: Verify presence of wp-config file
  stat: path='{{project_path.stdout}}/www/wp-config.php'
  register: wp_config

- include: create_wpconfig.yml
  when: wp_config.stat.exists == false

- name: Verify presence of Wordpress core directory
  stat: path='{{project_path.stdout}}/www/wordpress'
  register: wp_core

- include: download_wp_core.yml
  when: wp_core.stat.exists == false

- name: Register Nginx configuration file
  command: "echo /etc/nginx/sites-enabled/{{ project.env | default(dev) }}_{{ project.name }}.conf"
  register: ngx_conf
  changed_when: ngx_conf.rc != 0

- name: Verify presence of Nginx configuration file
  stat: path='{{ngx_conf.stdout}}'
  register: ngx_conf_exists

- include: nginx.yml
  when: ngx_conf_exists.stat.exists == false

- name: Register PHP-FPM configuration file
  command: "echo /etc/php5/fpm/pool.d/{{ project.env | default(dev) }}_{{ project.name }}.conf"
  register: php_fpm_conf
  changed_when: php_fpm_conf.rc != 0

- name: Verify presence of PHP-FPM configuration file
  stat: path='{{php_fpm_conf.stdout}}'
  register: php_fpm_conf_exists

- include: php-fpm.yml
  when: php_fpm_conf_exists.stat.exists == false

- name: Verify Wordpress is installed?
  shell: wp core is-installed
  args:
    chdir: '{{project_path.stdout}}/www/wordpress'
  register: wp_installed
  changed_when: wp_installed.rc != 0
  ignore_errors: true

- include: db.yml
  when: "'Error' in wp_installed.stderr"

- include: install_wp.yml
  when: "'Error' in wp_installed.stderr"

